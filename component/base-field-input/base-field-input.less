@import "../../theme/mixin.less";
@import "../../theme/typography.less";
@import "../../theme/color.less";
@import "../../theme/animation.less";

@backgroundDisabledColor: @neutralLighter;
@borderColor: @neutralSecondary;
@borderHoverColor: @neutralPrimary;
@borderFocusColor: @themePrimary;
@borderInvalidColor: @redDark;

.inputField {
  .normalize();
  .fontStyleMedium();
  position: relative;

  &.disabled {
    pointer-events: none;

    .fieldGroup {
      background-color: @backgroundDisabledColor;
    }
  }

  &:not(.disabled):not(.borderless) {
    &:not(.underlined) {
      .fieldGroup::after {
        .borderCss(@color: @borderColor);
      }

      .fieldGroup:focus-within::after {
        .borderCss(@color: @borderFocusColor, @width: 2px);
      }

      &.invalid .fieldGroup::after {
        border-color: @borderInvalidColor;
      }
    }

    .fieldGroup:hover::after {
      border-color: @borderHoverColor;
    }
  }
}

.fieldGroup {
  .normalize();
  border: 0;
  background: @white;
  height: 32px;
  display: flex;
  flex-direction: row;
  position: relative;
}

.description {
  color: @neutralSecondary;
  font-size: @fontSizeSmall;
}

.errorMessage {
  color: @redDark;
  font-size: @fontSizeSmall;
  margin: 0;
  padding-top: 5px;
  display: flex;
  align-items: center;
}

.requiredPlaceholder:not([underlined]) .wrapper::after {
  content: "*";
  color: @redDark;
  position: absolute;
  top: -5px;
  right: -10px;
}

.underlined {
  .wrapper {
    text-overflow: ellipsis;
    position: relative;
    display: flex;
  }

  .label {
    margin-right: 8px;
    padding-left: 12px;
    line-height: 22px;
    height: 32px;
  }

  &.required .label {
    position: relative;
    margin-right: 10px;

    &::after {
      position: absolute;
      right: -20px;
    }
  }

  .fieldGroup {
    position: relative;
    flex: 1 1 0px;
    max-width: 100%;
    width: 0%;
  }

  &.requiredPlaceholder .fieldGroup::after {
    content: "*";
    color: @redDark;
    position: absolute;
    top: -5px;
    right: -10px;
  }

  .wrapper::after {
    .borderBottomCss(@color: @borderColor);
  }

  .wrapper:focus-within::after {
    .borderBottomCss(@color: @borderFocusColor, @width: 2px);
  }

  &.invalid .wrapper::after {
    border-color: @borderInvalidColor;
  }

  &.disabled .wrapper::after {
    border-color: @backgroundDisabledColor;
  }
}
